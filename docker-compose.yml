version: "3.9"
services:
  application:
    build: .
    container_name: application
    restart: on-failure
    env_file: ./.env
    ports:
      - ${APP_LOCAL_PORT}:${APP_DOCKER_PORT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$DB_DOCKER_PORT/drone_feeder?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$DB_USER",
        "spring.datasource.password" : "$DB_ROOT_PASSWORD",
        "spring.datasource.driver-class-name": "com.mysql.cj.jdbc.Driver",
        "spring.jpa.database-platform" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.generate-ddl": "true",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "spring.servlet.multipart.max-file-size": "10MB",
        "spring.servlet.multipart.max-request-size": "10MB",
        "spring.servlet.multipart.enabled" : "true"
      }'
    networks:
      - drone-feeder-net
    depends_on:
      mysqldb:
        condition: service_healthy
  mysqldb:
    image: mysql:8
    container_name: mysqldb
    restart: unless-stopped
    env_file: ./.env
    networks:
      - drone-feeder-net
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_ROOT_PASSWORD
      - MYSQL_DATABASE=drone_feeder
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    ports:
      - ${DB_LOCAL_PORT}:${DB_DOCKER_PORT}
networks:
  drone-feeder-net:
    driver: bridge
volumes:
  db:
